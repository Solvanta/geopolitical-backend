"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@babel/runtime/helpers/extends"),r=require("react"),t=require("three"),a=require("@react-three/fiber"),n=require("three-stdlib");function o(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function u(e){if(e&&e.__esModule)return e;var r=Object.create(null);return e&&Object.keys(e).forEach((function(t){if("default"!==t){var a=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,a.get?a:{enumerable:!0,get:function(){return e[t]}})}})),r.default=e,Object.freeze(r)}var i=o(e),l=u(r),d=u(t);const s=l.forwardRef((({scale:e=10,frames:r=1/0,opacity:t=1,width:o=1,height:u=1,blur:s=1,far:c=10,resolution:f=512,smooth:m=!0,color:h="#000000",depthWrite:p=!1,matrixWorldAutoUpdate:g=!1,renderOrder:v,...b},M)=>{const y=l.useRef(null),x=a.useThree((e=>e.scene)),w=a.useThree((e=>e.gl)),T=l.useRef(null);o*=Array.isArray(e)?e[0]:e||1,u*=Array.isArray(e)?e[1]:e||1;const[O,R,S,W,A,j,C]=l.useMemo((()=>{const e=new d.WebGLRenderTarget(f,f),r=new d.WebGLRenderTarget(f,f);r.texture.generateMipmaps=e.texture.generateMipmaps=!1;const t=new d.PlaneGeometry(o,u).rotateX(Math.PI/2),a=new d.Mesh(t),i=new d.MeshDepthMaterial;i.depthTest=i.depthWrite=!1,i.onBeforeCompile=e=>{e.uniforms={...e.uniforms,ucolor:{value:new d.Color(h)}},e.fragmentShader=e.fragmentShader.replace("void main() {","uniform vec3 ucolor;\n           void main() {\n          "),e.fragmentShader=e.fragmentShader.replace("vec4( vec3( 1.0 - fragCoordZ ), opacity );","vec4( ucolor * fragCoordZ * 2.0, ( 1.0 - fragCoordZ ) * 1.0 );")};const l=new d.ShaderMaterial(n.HorizontalBlurShader),s=new d.ShaderMaterial(n.VerticalBlurShader);return s.depthTest=l.depthTest=!1,[e,t,i,a,l,s,r]}),[f,o,u,e,h]),P=e=>{W.visible=!0,W.material=A,A.uniforms.tDiffuse.value=O.texture,A.uniforms.h.value=1*e/256,w.setRenderTarget(C),w.render(W,T.current),W.material=j,j.uniforms.tDiffuse.value=C.texture,j.uniforms.v.value=1*e/256,w.setRenderTarget(O),w.render(W,T.current),W.visible=!1};let E,q,k,B=0;return a.useFrame((()=>{T.current&&(r===1/0||B<r)&&(B++,k=x.matrixWorldAutoUpdate,E=x.background,q=x.overrideMaterial,y.current.visible=!1,x.background=null,x.overrideMaterial=S,g||(x.matrixWorldAutoUpdate=!1),w.setRenderTarget(O),w.render(x,T.current),P(s),m&&P(.4*s),w.setRenderTarget(null),y.current.visible=!0,x.overrideMaterial=q,g||(x.matrixWorldAutoUpdate=k),x.background=E)})),l.useImperativeHandle(M,(()=>y.current),[]),l.createElement("group",i.default({"rotation-x":Math.PI/2},b,{ref:y}),l.createElement("mesh",{renderOrder:v,geometry:R,scale:[1,-1,1],rotation:[-Math.PI/2,0,0]},l.createElement("meshBasicMaterial",{transparent:!0,map:O.texture,"map-encoding":w.outputEncoding,opacity:t,depthWrite:p})),l.createElement("orthographicCamera",{ref:T,args:[-o/2,o/2,u/2,-u/2,0,c]}))}));exports.ContactShadows=s;
